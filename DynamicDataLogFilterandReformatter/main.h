/*
Problem Description:

You are given a text log file generated by a monitoring system. Each line in the file contains a timestamp, a severity level,
and a message, separated by the pipe character (|). The format of each line is as follows:

YYYY-MM-DD HH:MM:SS|<severity>|<message>
Example:

2025-02-18 14:23:45|INFO|System startup complete.
2025-02-18 14:25:10|WARNING|Low disk space.
2025-02-18 14:26:00|ERROR|Unable to open configuration file.
Your Tasks:

Dynamic File Loading:

Read the entire log file into memory. Since the file size is not predetermined, dynamically allocate memory
(e.g., using malloc/realloc) to store each line.
Parsing with Pointer Arithmetic:

Parse each log line using pointer arithmetic (avoid using functions like strtok if possible). Extract the three components:
timestamp, severity, and message.
Filtering Function:

Implement a function that filters log entries based on:
A specified severity level (for instance, only ERROR and WARNING messages).
A given time interval (e.g., between 2025-02-18 14:20:00 and 2025-02-18 14:30:00).
Reformat and Write Output:

Reformat each filtered log entry into a new format:

[<severity>] <timestamp> - <message>
Write the reformatted entries into a new text file.
Example Output:

[WARNING] 2025-02-18 14:25:10 - Low disk space.
[ERROR] 2025-02-18 14:26:00 - Unable to open configuration file.
Error Handling & Edge Cases:

Handle memory allocation failures gracefully.
Validate the format of each log entry. If a line is malformed, decide whether to skip it or handle it accordingly.
Ensure the program works correctly with edge cases (e.g., an empty file or a file with no entries matching the filter).
Testing:

Verify your implementation with log files of various sizes, including one with over 100,000 entries.
*/

#ifndef MAIN_H_INCLUDED
#define MAIN_H_INCLUDED

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Vector/libvec.h"
#include "DataLog/dataLog.h"

#define MEM_ERROR 5



#endif // MAIN_H_INCLUDED
